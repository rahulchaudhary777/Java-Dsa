package oops.linkedList;

public class circularQueueArray {

    int []arr = new int[6];
    int head = -1;
    int tail = -1;

    public boolean isEmpty(){
        return tail == -1;
    }

    public boolean isFull(){
        return ((head == 0 && tail+1 == 6) || tail+1 == head);
    }

    public void enQueue(int n){

        if(isFull())
            System.out.println("full");

        else if(isEmpty()){
            head = tail = 0;
            arr[tail] = n;
        }

        else{
            if(tail+1 == 6){
                tail = 0;
            }
            else{
                tail++;
            }
            arr[tail] = n;
        }
    }

    public void deQueue(){
        if(isEmpty())
            System.out.println("empty");
        else{

            if(head == tail){
                System.out.println(arr[head]);
                head = tail = -1;
            }

            else if(head+1 == 6){
                head = 0;
            }
            else{
                System.out.println(arr[head]);
                head++;
            }
        }
    }

    public void display(){

        for (int i = 0; i < 6; i++) {
            System.out.println(arr[i]);
        }
    }
}
